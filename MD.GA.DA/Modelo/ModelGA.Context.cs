//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MD.GA.BE.Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GestionAlmacen : DbContext
    {
        public GestionAlmacen()
            : base("name=GestionAlmacen")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Articulo> Articulos { get; set; }
        public virtual DbSet<Documento> Documentos { get; set; }
        public virtual DbSet<Documento_Articulo> Documento_Articulo { get; set; }
        public virtual DbSet<Empresa> Empresas { get; set; }
        public virtual DbSet<Proveedor> Proveedores { get; set; }
        public virtual DbSet<Puesto> Puestos { get; set; }
        public virtual DbSet<Sede> Sedes { get; set; }
        public virtual DbSet<UnidadMedida> UnidadMedidas { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<BANCO> BANCOes { get; set; }
    
        public virtual int ArticuloAumentarStock(Nullable<int> idArticulo, Nullable<double> cantidad, ObjectParameter bit)
        {
            var idArticuloParameter = idArticulo.HasValue ?
                new ObjectParameter("idArticulo", idArticulo) :
                new ObjectParameter("idArticulo", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ArticuloAumentarStock", idArticuloParameter, cantidadParameter, bit);
        }
    
        public virtual int ArticuloReducirStock(Nullable<int> idArticulo, Nullable<double> cantidad, ObjectParameter bit)
        {
            var idArticuloParameter = idArticulo.HasValue ?
                new ObjectParameter("idArticulo", idArticulo) :
                new ObjectParameter("idArticulo", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ArticuloReducirStock", idArticuloParameter, cantidadParameter, bit);
        }
    
        public virtual int DocumentoGetSiguienteNro(string tipoDocumento, Nullable<int> idSede, string tipoPre, ObjectParameter nroDocumento)
        {
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("idSede", idSede) :
                new ObjectParameter("idSede", typeof(int));
    
            var tipoPreParameter = tipoPre != null ?
                new ObjectParameter("tipoPre", tipoPre) :
                new ObjectParameter("tipoPre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DocumentoGetSiguienteNro", tipoDocumentoParameter, idSedeParameter, tipoPreParameter, nroDocumento);
        }
    
        public virtual ObjectResult<Usuario> UsuarioValidarLogin(string usuario, string password)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usuario>("UsuarioValidarLogin", usuarioParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Usuario> UsuarioValidarLogin(string usuario, string password, MergeOption mergeOption)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usuario>("UsuarioValidarLogin", mergeOption, usuarioParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Area> GetAllAreaByEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Area>("GetAllAreaByEstado");
        }
    
        public virtual ObjectResult<Area> GetAllAreaByEstado(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Area>("GetAllAreaByEstado", mergeOption);
        }
    
        public virtual ObjectResult<Articulo> GetAllArticuloByEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Articulo>("GetAllArticuloByEstado");
        }
    
        public virtual ObjectResult<Articulo> GetAllArticuloByEstado(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Articulo>("GetAllArticuloByEstado", mergeOption);
        }
    
        public virtual ObjectResult<Empresa> GetAllEmpresaByEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empresa>("GetAllEmpresaByEstado");
        }
    
        public virtual ObjectResult<Empresa> GetAllEmpresaByEstado(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empresa>("GetAllEmpresaByEstado", mergeOption);
        }
    
        public virtual ObjectResult<Proveedor> GetAllProveedorByEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proveedor>("GetAllProveedorByEstado");
        }
    
        public virtual ObjectResult<Proveedor> GetAllProveedorByEstado(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proveedor>("GetAllProveedorByEstado", mergeOption);
        }
    
        public virtual ObjectResult<Sede> GetAllSedeByEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sede>("GetAllSedeByEstado");
        }
    
        public virtual ObjectResult<Sede> GetAllSedeByEstado(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sede>("GetAllSedeByEstado", mergeOption);
        }
    
        public virtual ObjectResult<UnidadMedida> GetAllUnidadMedidaByEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnidadMedida>("GetAllUnidadMedidaByEstado");
        }
    
        public virtual ObjectResult<UnidadMedida> GetAllUnidadMedidaByEstado(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnidadMedida>("GetAllUnidadMedidaByEstado", mergeOption);
        }
    
        public virtual int SP_ENCRIPTARPASSB(string cLAVE, ObjectParameter pASS)
        {
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ENCRIPTARPASSB", cLAVEParameter, pASS);
        }
    
        public virtual int EncriptarPass(string cLAVE, ObjectParameter pASS)
        {
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EncriptarPass", cLAVEParameter, pASS);
        }
    
        public virtual int SP_DESENCRIPTARPASSB(string cLAVE, ObjectParameter pASS)
        {
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DESENCRIPTARPASSB", cLAVEParameter, pASS);
        }
    
        public virtual int DesencriptarPass(string cLAVE, ObjectParameter pASS)
        {
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesencriptarPass", cLAVEParameter, pASS);
        }
    
        public virtual ObjectResult<SP_LISTARREPORSALIDA_Result1> SP_LISTARREPORSALIDA(Nullable<System.DateTime> fecini, Nullable<System.DateTime> fecfin, Nullable<int> area, Nullable<int> articulo, Nullable<int> sede)
        {
            var feciniParameter = fecini.HasValue ?
                new ObjectParameter("fecini", fecini) :
                new ObjectParameter("fecini", typeof(System.DateTime));
    
            var fecfinParameter = fecfin.HasValue ?
                new ObjectParameter("fecfin", fecfin) :
                new ObjectParameter("fecfin", typeof(System.DateTime));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(int));
    
            var articuloParameter = articulo.HasValue ?
                new ObjectParameter("articulo", articulo) :
                new ObjectParameter("articulo", typeof(int));
    
            var sedeParameter = sede.HasValue ?
                new ObjectParameter("sede", sede) :
                new ObjectParameter("sede", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTARREPORSALIDA_Result1>("SP_LISTARREPORSALIDA", feciniParameter, fecfinParameter, areaParameter, articuloParameter, sedeParameter);
        }
    
        public virtual ObjectResult<ListaEstadSalida_Resultado> ListaEstadSalida(Nullable<System.DateTime> fecini, Nullable<System.DateTime> fecfin, Nullable<int> area, Nullable<int> articulo, Nullable<int> sede)
        {
            var feciniParameter = fecini.HasValue ?
                new ObjectParameter("fecini", fecini) :
                new ObjectParameter("fecini", typeof(System.DateTime));
    
            var fecfinParameter = fecfin.HasValue ?
                new ObjectParameter("fecfin", fecfin) :
                new ObjectParameter("fecfin", typeof(System.DateTime));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(int));
    
            var articuloParameter = articulo.HasValue ?
                new ObjectParameter("articulo", articulo) :
                new ObjectParameter("articulo", typeof(int));
    
            var sedeParameter = sede.HasValue ?
                new ObjectParameter("sede", sede) :
                new ObjectParameter("sede", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaEstadSalida_Resultado>("ListaEstadSalida", feciniParameter, fecfinParameter, areaParameter, articuloParameter, sedeParameter);
        }
    
        public virtual ObjectResult<SP_LISTARREPORENTRADA_Result> SP_LISTARREPORENTRADA(Nullable<System.DateTime> fecini, Nullable<System.DateTime> fecfin, Nullable<int> area, Nullable<int> articulo)
        {
            var feciniParameter = fecini.HasValue ?
                new ObjectParameter("fecini", fecini) :
                new ObjectParameter("fecini", typeof(System.DateTime));
    
            var fecfinParameter = fecfin.HasValue ?
                new ObjectParameter("fecfin", fecfin) :
                new ObjectParameter("fecfin", typeof(System.DateTime));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(int));
    
            var articuloParameter = articulo.HasValue ?
                new ObjectParameter("articulo", articulo) :
                new ObjectParameter("articulo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTARREPORENTRADA_Result>("SP_LISTARREPORENTRADA", feciniParameter, fecfinParameter, areaParameter, articuloParameter);
        }
    
        public virtual ObjectResult<SP_LISTARREPORENTRADA_Result> ListaEstIngreso(Nullable<System.DateTime> fecini, Nullable<System.DateTime> fecfin, Nullable<int> area, Nullable<int> articulo)
        {
            var feciniParameter = fecini.HasValue ?
                new ObjectParameter("fecini", fecini) :
                new ObjectParameter("fecini", typeof(System.DateTime));
    
            var fecfinParameter = fecfin.HasValue ?
                new ObjectParameter("fecfin", fecfin) :
                new ObjectParameter("fecfin", typeof(System.DateTime));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(int));
    
            var articuloParameter = articulo.HasValue ?
                new ObjectParameter("articulo", articulo) :
                new ObjectParameter("articulo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTARREPORENTRADA_Result>("ListaEstIngreso", feciniParameter, fecfinParameter, areaParameter, articuloParameter);
        }
    
        public virtual ObjectResult<Articulo> SP_LISTAR_ARTICULOS_BY_STOCK(Nullable<int> idArea, string nombreArticulo, Nullable<bool> considerarStock, Nullable<bool> bajoStock, Nullable<bool> sinStock)
        {
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("idArea", idArea) :
                new ObjectParameter("idArea", typeof(int));
    
            var nombreArticuloParameter = nombreArticulo != null ?
                new ObjectParameter("nombreArticulo", nombreArticulo) :
                new ObjectParameter("nombreArticulo", typeof(string));
    
            var considerarStockParameter = considerarStock.HasValue ?
                new ObjectParameter("considerarStock", considerarStock) :
                new ObjectParameter("considerarStock", typeof(bool));
    
            var bajoStockParameter = bajoStock.HasValue ?
                new ObjectParameter("bajoStock", bajoStock) :
                new ObjectParameter("bajoStock", typeof(bool));
    
            var sinStockParameter = sinStock.HasValue ?
                new ObjectParameter("sinStock", sinStock) :
                new ObjectParameter("sinStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Articulo>("SP_LISTAR_ARTICULOS_BY_STOCK", idAreaParameter, nombreArticuloParameter, considerarStockParameter, bajoStockParameter, sinStockParameter);
        }
    
        public virtual ObjectResult<Articulo> SP_LISTAR_ARTICULOS_BY_STOCK(Nullable<int> idArea, string nombreArticulo, Nullable<bool> considerarStock, Nullable<bool> bajoStock, Nullable<bool> sinStock, MergeOption mergeOption)
        {
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("idArea", idArea) :
                new ObjectParameter("idArea", typeof(int));
    
            var nombreArticuloParameter = nombreArticulo != null ?
                new ObjectParameter("nombreArticulo", nombreArticulo) :
                new ObjectParameter("nombreArticulo", typeof(string));
    
            var considerarStockParameter = considerarStock.HasValue ?
                new ObjectParameter("considerarStock", considerarStock) :
                new ObjectParameter("considerarStock", typeof(bool));
    
            var bajoStockParameter = bajoStock.HasValue ?
                new ObjectParameter("bajoStock", bajoStock) :
                new ObjectParameter("bajoStock", typeof(bool));
    
            var sinStockParameter = sinStock.HasValue ?
                new ObjectParameter("sinStock", sinStock) :
                new ObjectParameter("sinStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Articulo>("SP_LISTAR_ARTICULOS_BY_STOCK", mergeOption, idAreaParameter, nombreArticuloParameter, considerarStockParameter, bajoStockParameter, sinStockParameter);
        }
    
        public virtual int SP_DELETE_DOCUMENT_ARTICLE(Nullable<int> nUMID)
        {
            var nUMIDParameter = nUMID.HasValue ?
                new ObjectParameter("NUMID", nUMID) :
                new ObjectParameter("NUMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_DOCUMENT_ARTICLE", nUMIDParameter);
        }
    }
}
